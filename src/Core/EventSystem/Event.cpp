/*============================================================================*/
#include "Event.hpp"
/*============================================================================*/
using namespace Sh;
/*============================================================================*/

Event::Event()
    : received(false)
    { }

/*----------------------------------------------------------------------------*/

bool Event::isReceived() const {
    return received;
}

/*----------------------------------------------------------------------------*/

Event::Mask Event::mask() {
    return getMask<Event>();
}

/*----------------------------------------------------------------------------*/

uint8_t Event::getUniqueId() {

    static constexpr uint8_t ID_LIMIT = 60;
    static uint8_t ID = 1;

    if (ID == ID_LIMIT) {
        throw std::runtime_error("reached limit of event types");
    }

    return ID++;
}

/*============================================================================*/